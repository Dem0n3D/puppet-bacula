# DO NOT EDIT - Managed by Puppet
#
# Bacula Director Master Configuration
#   for <%= bacula_director_server %>

# Define the name of this director so other clients can
# connect to it and work with our system
Director {
  Name = "<%= bacula_director_server -%>:director"
  Query File = "/etc/bacula/scripts/query.sql"
  Working Directory = "/var/lib/bacula"
  PID Directory = "/var/run/bacula"
  Maximum Concurrent Jobs = 5
  Password = "<%= bacula_server_password -%>"
  Messages = "<%= bacula_director_server -%>:messages:daemon"
}

# This is where the catalog information will be stored (basically
# this should be how to connect to whatever database we're using)
Catalog {
  Name = "<%= bacula_director_server -%>:mysql"
  dbname = "<%= bacula_catalog_database -%>"; dbuser = "<%= bacula_catalog_user -%>"; dbpassword = "<%= bacula_catalog_password -%>"
}

# Configure how the directory will log and/or send messages. This
# should should be for just about everything.
Messages {
  Name = "<%= bacula_director_server -%>:messages:standard"
  Mail Command = "/usr/lib/bacula/bsmtp -h localhost -f bacula@<%= domain -%> -s \"Bacula %t %e (for %c)\" %r"
  Operator Command = "/usr/lib/bacula/bsmtp -h localhost -f bacula@<%= domain -%> -s \"Bacula Intervention Required (for %c)\" %r"
  Mail = <%= bacula_mail_to -%> = all, !skipped
  Operator = <%= bacula_mail_to -%> = mount
  Console = all, !skipped, !saved
  # WARNING! the following will create a file that you must cycle from
  #          time to time as it will grow indefinitely. However, it will
  #          also keep all your messages if they scroll off the console.
  Append = "/var/log/bacula/<%= bacula_director_server -%>:director.log" = all, !skipped
  Catalog = all
}

# These are messages directly from the various daemons themselves.
Messages {
  Name = "<%= bacula_director_server -%>:messages:daemon"
  Mail Command = "/usr/lib/bacula/bsmtp -h localhost -f bacula@<%= domain -%> -s \"Bacula Notice (from Director %d)\" %r"
  Mail = <%= bacula_mail_to -%> = all, !skipped
  Console = all, !skipped, !saved
  Append = "/var/log/bacula/<%= bacula_director_server -%>:director.log" = all, !skipped
}

# Restricted console used by tray-monitor to get the status of the director
Console {
  Name = "<%= bacula_director_server -%>:monitor:director"
  Password = "<%= bacula_console_password -%>"
  CommandACL = status, .status
}

# DEFAULT STORAGE SERVER ------------------------------------------------------
# All the clients will define their own Storage Daemon configuration as they
# will connect to a dedicated File device on that server (to aid Pool & Volume
# management along with concurrent access). This section will define a default
# Storage Daemon to connect to (using the standard FileStorage device) and a
# Pool which will be used with that as well.
Storage {
  Name = "<%= bacula_storage_server -%>:storage:default"
  Address = <%= bacula_storage_server %>
  Password = "<%= bacula_server_password -%>"
  Device = "FileStorage"
  Media Type = File
}

Pool {
  Name = "<%= bacula_storage_server -%>:pool:default"
  # All Volumes will have the format standard.date.time to ensure they
  # are kept unique throughout the operation and also aid quick analysis
  # We won't use a counter format for this at the moment.
  Label Format = "vol_default."
  Pool Type = Backup
  # Clean up any we don't need, and keep them for a maximum of a month (in
  # theory the same time period for weekly backups from the clients)
  Recycle = Yes
  Auto Prune = Yes
  Volume Retention = 1 Week
  # Don't allow re-use of volumes; one volume per job only
  Maximum Volume Jobs = 1
}

Pool {
  Name = "<%= bacula_storage_server -%>:pool:catalog"
  # All Volumes will have the format director.catalog.date.time to ensure they
  # are kept unique throughout the operation and also aid quick analysis
  Label Format = "vol_catalog."
  Pool Type = Backup
  # Clean up any we don't need, and keep them for a maximum of a month (in
  # theory the same time period for weekly backups from the clients)
  Recycle = Yes
  Auto Prune = Yes
  # We have no limit on the number of volumes, but we will simply set that
  # we should keep at least three days worth of backups of the database
  Volume Retention = 3 Days
  # Don't allow re-use of volumes; one volume per job only
  Maximum Volume Jobs = 1
}

# FILE SETS -------------------------------------------------------------------

# This set is specifically for Bacula to allow it to backup its own internal
# cataloge as part of the normal process.
FileSet {
  Name = "Catalog"
  Include {
    Options {
      Signature   = SHA1
      Compression = GZIP
    }
    File = "/var/lib/bacula/bacula.sql"
  }
}


# SCHEDULE --------------------------------------------------------------------
# Define when jobs should be run, and what Levels of backups they will be when
# they are run.

# These two are the default backup schedule; don't change them
Schedule {
  Name = "WeeklyCycle"
  Run = Level=Full First Sun at 23:05
  Run = Level=Differential Second-Fifth Sun at 23:05
  Run = Level=Incremental Mon-Sat at 23:05
}

Schedule {
  Name = "WeeklyCycleAfterBackup"
  Run = Level=Full Mon-Sun at 23:10
}

# JOBS ------------------------------------------------------------------------
# Backup the catalog database (after the nightly save)
Job {
  Name = "<%= bacula_director_server -%>:catalog"
  Client = "<%= bacula_director_server -%>"
  Type = Backup
  # Make sure this is a Full backup every time.
  Level = Full
  FileSet = "Catalog"
  Schedule = "WeeklyCycleAfterBackup"
  # Add commands to export the database and delete it when backed up
  RunBeforeJob = "/etc/bacula/scripts/make_catalog_backup.pl <%= bacula_director_server -%>:mysql"
  # RunAfterJob  = "/etc/bacula/scripts/delete_catalog_backup"
  # This will be backed up to the default storage location
  Storage = "<%= bacula_storage_server -%>:storage:default"
  Pool = "<%= bacula_storage_server -%>:pool:catalog"
  Messages = "<%= bacula_director_server -%>:messages:standard"
  Write Bootstrap = "/var/lib/bacula/%n.bsr"
  # Make sure this is run after main backups
  Priority = 100
}

# CLIENTS ---------------------------------------------------------------------
# No client (other than this server itself) will normally be defined directly
# in this file. We'll get Puppet to create individual config files under
# /etc/bacula/bacula-dir.d and then the following code will import them for us.

# Finally, bring in all the additional pieces of configuration from the
# different servers for which this Director was configured to manage
@|"sh -c 'for f in /etc/bacula/bacula-dir.d/*.conf ; do echo @${f} ; done'"
