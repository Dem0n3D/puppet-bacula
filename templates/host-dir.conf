# DO NOT EDIT - Managed by Puppet
#
# Bacula Director Per-Host Configuration
#   for <%= fqdn %>
#   via <%= bacula_director_server -%>:director (<%= bacula_director_server -%>)
#    to <%= bacula_storage_server -%>:storage:<%= fqdn -%> (<%= bacula_storage_server -%>)
#
# These files will be important dynamically by bacula-dir.conf when
# put into the /etc/bacula/bacula-dir.d directory.

# Configure our client so that the Director can contact it
Client {
  Name = "<%= fqdn -%>"
  Password = "<%= bacula_server_password -%>"
  Address = <%= fqdn %>
  # This will be managed by the default catalog
  Catalog = "<%= bacula_director_server -%>:mysql"
  # Any files backed up will only be kept for maximum of
  # around 1 month, so we'll set retention of that information
  # to a maximum of 6 weeks
  File Retention = 6 Weeks
  # However, we'll keep a log of all the work done on the server
  # for around a year so we can keep an eye on it and see
  # general progression or changes over time.
  Job Retention = 1 Year
  # Get rid of any data or files as they expire.
  Auto Prune = Yes
}

# Each client will have a dedicated Device on the Storage Daemon,
# so that we can support concurrent backups and have dedicated
# space for it's volumes (which will be managed by the Pools below)
Storage {
  Name = "<%= bacula_storage_server -%>:storage:<%= fqdn -%>"
  Address = <%= bacula_storage_server %>
  Password  = "<%= bacula_server_password -%>"
  Device = "<%= fqdn -%>"
  Media Type = File
}

# Create two pools of Volumes to work with: One will be for Weekly
# backups, which we'll keep a months worth, and Daily, those kept for a week.
Pool {
  Name = "<%= bacula_storage_server -%>:pool:<%= fqdn -%>:weekly"
  # All Volumes will have the format fqdn.type.date.time to ensure they
  # are kept unique throughout the operation and also aid quick analysis
  Label Format = "<%= fqdn -%>.weekly.${Counter<%= fqdn.gsub("-", "_").capitalize -%>Weekly+:p/3/0/r}"
  Pool Type = Backup
  # Keep using Volumes as they expire, and delete the ones
  # that are no longer required or expire.
  Recycle = Yes
  Auto Prune = Yes
  # The point of calculation for retention is the time the
  # volume was last written, therefore we'll knock 36 hours
  # off 5 weeks to ensure correct rotation
  Volume Retention = 1 Month 3 Days 12 Hours
  # For Weekly Backups, we want to keep 5 copies: A Full backup
  # is done monthly, and upto 4 differential backups through
  # the course of the rest of the month. However, to allow for
  # first time backups, or changes in FileSet's, we'll allow for
  # an additional volume.
  Maximum Volumes = 12
  # A Volume should not be appended; either created when
  # needed or overwritten when too old
  Maximum Volume Jobs = 1
}

Pool {
  Name = "<%= bacula_storage_server -%>:pool:<%= fqdn -%>:daily"
  Label Format = "<%= fqdn -%>.daily.${Counter<%= fqdn.gsub("-", "_").capitalize -%>Daily+:p/3/0/r}"
  Pool Type = Backup
  Recycle = Yes
  Auto Prune = Yes
  # Like weekly backups, we'll move through a set number
  # of volumes, which should be no more than 7 days old
  # and we need no more than 6 of them (7th day is the full
  # backup).
  Maximum Volumes = 12
  # The point of calculation for retention is the time the
  # volume was last written, therefore we'll knock 12 hours
  # off 7 days to ensure correct rotation
  Volume Retention = 6 Days 12 Hours
  # Again, create or overwrite, not append.
  Maximum Volume Jobs = 1
}

# Create a pair of Counter's which will be used to label the volumes as they're
# created on the system.
Counter {
  Name    = "Counter<%= fqdn.gsub("-", "_").capitalize -%>Daily"
  Minimum = 1
  Catalog = "<%= bacula_director_server -%>:mysql"
}

Counter {
  Name    = "Counter<%= fqdn.gsub("-", "_").capitalize -%>Weekly"
  Minimum = 1
  Catalog = "<%= bacula_director_server -%>:mysql"
}
